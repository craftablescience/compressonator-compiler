name: Build
on:
  push:
    branches:
      - main
  workflow_dispatch:
  # nothing here

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - { id: windows-latest, name: Windows }
          - { id: ubuntu-latest, name: Linux }
          - { id: macos-latest, name: macOS }
        build_type: [Debug, Release]
    runs-on: ${{matrix.os.id}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Checkout Compressonator
        uses: actions/checkout@v4
        with:
          repository: 'GPUOpen-Tools/compressonator'
          ref: 'f4b53d79ec5abbb50924f58aebb7bf2793200b94' # Latest as of 6/29/2024
          path: 'compressonator'
          submodules: recursive

      - name: Checkout GLM
        uses: actions/checkout@v4
        with:
          repository: 'g-truc/glm'
          path: 'common/lib/ext/glm'
          submodules: recursive

      - name: Patch Compressonator [Windows]
        if: matrix.os.id == 'windows-latest'
        run: |
          Copy-Item -Path patches/cmp_core/CMakeLists.txt     -Destination compressonator/cmp_core/CMakeLists.txt
          Copy-Item -Path patches/external/glm/CMakeLists.txt -Destination compressonator/external/glm/CMakeLists.txt
          Copy-Item -Path patches/CMakeLists.txt              -Destination compressonator/CMakeLists.txt

      - name: Patch Compressonator [Linux / macOS]
        if: matrix.os.id == 'ubuntu-latest' || matrix.os.id == 'macos-latest'
        run: |
          cp patches/cmp_core/CMakeLists.txt     compressonator/cmp_core/CMakeLists.txt
          cp patches/external/glm/CMakeLists.txt compressonator/external/glm/CMakeLists.txt
          cp patches/CMakeLists.txt              compressonator/CMakeLists.txt

      - name: Set up MSVC [Windows]
        if: matrix.os.id == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          spectre: true

      - name: Install Dependencies [Linux]
        if: matrix.os.id == 'ubuntu-latest'
        run: |
          sudo apt update && sudo apt install -y ninja-build

      - name: Install Dependencies [macOS]
        if: matrix.os.id == 'macos-latest'
        run: |
          brew install ninja

      - name: Configure CMake
        working-directory: compressonator
        run: cmake -G "Ninja" -B cmake-build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Build
        working-directory: compressonator
        run: cmake --build cmake-build --config ${{matrix.build_type}}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: 'Compressonator-${{matrix.os.name}}-${{matrix.build_type}}'
          path: |
            compressonator/out/*
          retention-days: 7
